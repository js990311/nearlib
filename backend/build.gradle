plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.epages.restdocs-api-spec' version "0.18.2"
	id 'jacoco'
}

group = 'com.rejs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://jitpack.io' }
}


ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// csv parser
	implementation 'com.univocity:univocity-parsers:2.9.1'

	// csv import library
	implementation 'com.github.js990311:csvloader:0.1.7'

	// test container
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	// hibernate search
	implementation 'org.hibernate.search:hibernate-search-mapper-orm:7.2.3.Final'
	implementation 'org.hibernate.search:hibernate-search-backend-lucene:7.2.3.Final'
	implementation 'org.apache.lucene:lucene-analysis-nori:9.11.1' // for korean. hibernate search7이 lucene 9.11.1을 사용하기 때문에 9.11.1버전으로 맞춤

	// prometheus
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// for loki
	implementation("com.github.loki4j:loki-logback-appender:1.6.0")

	// api-rest-docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
}

jacoco {
	toolVersion = "0.8.13"
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacoco/reports')
	}
}

jacocoTestCoverageVerification{
	dependsOn test
	violationRules{
		rule {{
			limit{
				// 라인 커버리지가 N 미만이면 실패
				minimum = 0.5
			}
		}}
	}
}

tasks.register("jacocoCheck"){
	group = 'Verification'
	description = 'Jacoco for code coverage'
	dependsOn jacocoTestReport
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	systemProperty "spring.profiles.active", "test"
}
tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

task loadCsv(type: JavaExec) {
	group = "loadcsv"
	description = "load csv"

	mainClass = "com.rejs.csvloader.CsvloaderApplication"

	// CP 설정
	classpath = sourceSets.main.runtimeClasspath

	args "-y", "library.yml", "-c", "library.csv"
	args "--spring.main.web-application-type=NONE"
	args "--spring.profiles.active=loadcsv"
}

postman {
	title = 'nearlib'
	version = '0.1.0'
	baseUrl = 'http://localhost:8080'
}
